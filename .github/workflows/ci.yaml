name: CI

on:
  push:
    branches: [master]
    tags: ["v*"]
  pull_request:
    branches: [master]
  schedule:
    - cron: 0 4 * * *

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: default
      CLIENT_TEST_E2E_USER_TOKEN: ${{ secrets.CLIENT_TEST_E2E_USER_TOKEN }}
      CLIENT_TEST_E2E_USER_TOKEN_ALT: ${{ secrets.CLIENT_TEST_E2E_USER_TOKEN_ALT }}
    steps:
      - name: Checkout commit
        uses: actions/checkout@v3
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version
          cache: "pip"
          cache-dependency-path: setup.cfg
      - name: Install dependencies
        run: make setup
      - name: Lint
        run: |
          echo "::add-matcher::.github/actionlint-matcher.json"
          make lint
        env:
          CI_LINT_RUN: 1
      - name: Build image
        run: make docker-build
      - name: Run tests
        run: |
          # Privileged mode is required only if docker-engine use aufs driver for storage
          docker run --privileged -t \
            -e CLUSTER_NAME \
            -e CLIENT_TEST_E2E_USER_TOKEN \
            -e CLIENT_TEST_E2E_USER_TOKEN_ALT \
            platform-e2e:latest cluster-test
      - name: Upload image artifact
        uses: neuro-inc/upload-image-action@v21.9.2
        with:
          image: platform-e2e
          token: ${{ github.token }}

  release:
    name: Release package
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout commit
        uses: actions/checkout@v3
      - name: Purge old artifacts
        uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ github.token }}
          expire-in: 30mins
      - name: Login to ghcr.io
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: image
      - name: Push image
        run: |
          docker load --input platform-e2e.tar
          TAG=${GITHUB_REF#refs/tags/v}
          docker tag platform-e2e:latest ghcr.io/neuro-inc/platform-e2e:$TAG
          docker tag platform-e2e:latest ghcr.io/neuro-inc/platform-e2e:latest
          docker push -a ghcr.io/neuro-inc/platform-e2e
