version: 2.1
executors:
    python:
      docker:
        - image: circleci/python:3.7.2

defaults: &defaults
  executor: python
  working_directory: ~/repo

orbs:
  artifactory: circleci/artifactory@1.0.0

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: setup
          command: |
            python3 -m venv .env
            . .env/bin/activate
            make setup

      - run:
          name: lint
          command: |
            . .env/bin/activate
            make lint

      - run:
          name: test
          command: |
            . .env/bin/activate
            make test
  publish:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            make build
            docker tag platform-e2e:latest $ARTIFACTORY_DOCKER_REPO/platform-e2e:$CIRCLE_TAG
            docker tag platform-e2e:latest $ARTIFACTORY_DOCKER_REPO/platform-e2e:latest

      - run:
          name: Test image
          command: docker run -t -e CLIENT_TEST_E2E_USER_NAME -e CLIENT_TEST_E2E_USER_NAME_ALT platform-e2e:latest cluster-test
      - artifactory/install
      - artifactory/configure:
          artifactory-key: ARTIFACTORY_PASSWORD
          artifactory-user: ARTIFACTORY_USERNAME
          artifactory-url: ARTIFACTORY_URL
      - artifactory/docker-login:
          artifactory-key: ARTIFACTORY_PASSWORD
          artifactory-user: ARTIFACTORY_USERNAME
          docker-registry: https://$ARTIFACTORY_DOCKER_REPO
      - artifactory/docker-publish:
          docker-tag: $ARTIFACTORY_DOCKER_REPO/platform-e2e:$CIRCLE_TAG
          repository: $ARTIFACTORY_DOCKER_REPO_NAME
      - artifactory/docker-publish:
          docker-tag: $ARTIFACTORY_DOCKER_REPO/platform-e2e:latest
          repository: $ARTIFACTORY_DOCKER_REPO_NAME


workflows:
  version: 2

  main:
    jobs:
      - build:
          context: org-global
          filters:
            tags:
              ignore: /^v.*/
      - publish:
          context: org-global
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

  nightly:
    jobs:
      - build:
          context: org-global
    triggers: #use the triggers key to indicate a scheduled build
      - schedule:
          cron: "0 0 * * *" # use cron syntax to set the schedule
          filters:
            branches:
              only:
                - master
